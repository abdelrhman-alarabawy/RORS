
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author abdelrhman
 */
public class RORS_table extends javax.swing.JFrame {

    int rest_num = 1;
    PreparedStatement pst = null;
    PreparedStatement pst1 = null;


    private String cust_d;

    /**
     * Creates new form table
     */
    public RORS_table() {
        initComponents();
    }

    public RORS_table(int r, String c) {
        rest_num = r;
        cust_d = c;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        jButton6.setText("jButton6");

        jButton7.setText("jButton7");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(400, 300));

        jPanel1.setBackground(java.awt.Color.darkGray);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 3, 24)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Select Table  ");

        jPanel2.setBackground(java.awt.Color.lightGray);
        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));

        jButton1.setText("one chair ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Three chairs");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Four Chairs");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setText("Two Chairs");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Family Table");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 314, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4)))
        );

        jButton8.setText("take away");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(184, 184, 184))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jButton8))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            boolean flag1 = false;
            int id;
            Connection conn = DB_connection.db_connection();
            String sql = "SELECT state,tid FROM restaurant_table where rid =" + rest_num + " and number_of_chairs = 1";
            pst = DB_connection.db_connection().prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {

                String str = rs.getString("state");
                id = rs.getInt("tid");
//                System.err.println(id);
//                System.err.println(str);
                if (str.equals("free")) {
                    String sql2 = "update  restaurant_table \n"
                            + "set state = \"resreved\" , cid = " + cust_d + " \n"
                            + "where tid = " + id ;
                            
                    pst1 = DB_connection.db_connection().prepareStatement(sql2);
                    int updateCount = pst1.executeUpdate();
                    flag1 = true;
                    break;
                }
            }
            if (flag1) {

                Menu m = new Menu(rest_num, cust_d);
                m.setVisible(true);
                this.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(null, "No table with one chair avalible right now ---> please Try later or select another table with different number of chairs");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            boolean flag1 = false;
            int id;
            Connection conn = DB_connection.db_connection();
            String sql = "SELECT state,tid FROM restaurant_table where rid =" + rest_num + " and number_of_chairs = 2";
            pst = DB_connection.db_connection().prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {

                String str = rs.getString("state");
                id = rs.getInt("tid");
//                System.err.println(id);
//                System.err.println(str);
                if (str.equals("free")) {
                    String sql2 = "update  restaurant_table \n"
                            + "set state = \"resreved\" , cid = " + cust_d + " \n"
                            + "where tid = " + id ;
                    pst1 = DB_connection.db_connection().prepareStatement(sql2);
                    int updateCount = pst1.executeUpdate();
                    flag1 = true;
                    break;
                }
            }
            if (flag1) {

                Menu m = new Menu(rest_num, cust_d);
                m.setVisible(true);
                this.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(null, "No table with Two chair avalible right now ---> please Try later or select another table with different number of chairs");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            boolean flag1 = false;
            int id;
            Connection conn = DB_connection.db_connection();
            String sql = "SELECT state,tid FROM restaurant_table where rid =" + rest_num + " and number_of_chairs = 3";
            pst = DB_connection.db_connection().prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {

                String str = rs.getString("state");
                id = rs.getInt("tid");
//                System.err.println(id);
//                System.err.println(str);
                if (str.equals("free")) {
                    String sql2 = "update  restaurant_table \n"
                            + "set state = \"resreved\" , cid = " + cust_d + " \n"
                            + "where tid = " + id ;
                    pst1 = DB_connection.db_connection().prepareStatement(sql2);
                    int updateCount = pst1.executeUpdate();
                    flag1 = true;
                    break;
                }
            }
            if (flag1) {

                Menu m = new Menu(rest_num, cust_d);
                m.setVisible(true);
                this.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(null, "No table with three chair avalible right now ---> please Try later or select another table with different number of chairs");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            boolean flag1 = false;
            int id;
            Connection conn = DB_connection.db_connection();
            String sql = "SELECT state,tid FROM restaurant_table where rid =" + rest_num + " and number_of_chairs = 4";
            pst = DB_connection.db_connection().prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {

                String str = rs.getString("state");
                id = rs.getInt("tid");
//                System.err.println(id);
//                System.err.println(str);
                if (str.equals("free")) {
                    String sql2 = "update  restaurant_table \n"
                            + "set state = \"resreved\" , cid = " + cust_d + " \n"
                            + "where tid = " + id ;
                    pst1 = DB_connection.db_connection().prepareStatement(sql2);
                    int updateCount = pst1.executeUpdate();
                    flag1 = true;
                    break;
                }
            }
            if (flag1) {

                Menu m = new Menu(rest_num, cust_d);
                m.setVisible(true);
                this.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(null, "No table with four chair avalible right now ---> please Try later or select another table with different number of chairs");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            boolean flag1 = false;
            int id;
            Connection conn = DB_connection.db_connection();
            String sql = "SELECT state,tid FROM restaurant_table where rid =" + rest_num + " and number_of_chairs = 5";
            pst = DB_connection.db_connection().prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {

                String str = rs.getString("state");
                id = rs.getInt("tid");
//                System.err.println(id);
//                System.err.println(str);
                if (str.equals("free")) {
                    String sql2 = "update  restaurant_table \n"
                            + "set state = \"resreved\" , cid = " + cust_d + " \n"
                            + "where tid = " + id ;
                    pst1 = DB_connection.db_connection().prepareStatement(sql2);
                    int updateCount = pst1.executeUpdate();
                    flag1 = true;
                    break;
                }
            }
            if (flag1) {

                Menu m = new Menu(rest_num, cust_d);
                m.setVisible(true);
                this.setVisible(false);

            } else {
                JOptionPane.showMessageDialog(null, "No family table avalible right now ---> please Try later or select another table with different number of chairs");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Menu m = new Menu(rest_num, cust_d);
                m.setVisible(true);
                this.setVisible(false);
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RORS_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RORS_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RORS_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RORS_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RORS_table().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
